<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ISO8583Net</name>
    </assembly>
    <members>
        <member name="T:ISO8583Net.Types.ISOFieldParticipation">
            <summary>
            ISO field participation in the an ISO message type
            </summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldParticipation.MAN">
            <summary>ISO field is mandatory, must exist in the message type</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldParticipation.OPT">
            <summary>ISO field is optional, may exist in the message type</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldParticipation.CON">
            <summary>ISO field is conditional, must exists in the message type if some conditions are met</summary>
        </member>
        <member name="T:ISO8583Net.Types.ISOFieldLengthFormat">
            <summary>
            Indicates the length format used for the iso field. ISO Fields can have a fixed length format or a variable length format. When
            a variable length format is used, it means that some length indicator which indicates the length of the iso field preceeds the 
            field data.
            </summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldLengthFormat.FIXED">
            <summary>ISO field has fixed length type. There is no field data length indicator</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldLengthFormat.VAR">
            <summary>ISO field has varialble length type. Field data are preceeded by length indicator</summary>
        </member>
        <member name="T:ISO8583Net.Types.ISOFieldCoding">
            <summary>Defines the encoding of the ISO field value</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.ASCII">
            <summary>ISO field data are encoded in ASCII</summary>       
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.BCD">
            <summary>ISO field data are encoded in BCD</summary>        
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.BCDU">
            <summary>ISO field data are encoded in BCDU (BCD Unpacked)</summary>        
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.EBCDIC">
            <summary>ISO field data are encoded in EBCDIC</summary>        
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.BIN">
            <summary>ISO field data are encoded in BIN (Binary)</summary>        
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.Z">
            <summary>ISO field data are encoded in Z (Track2 Encoding)</summary>       
        </member>
        <member name="T:ISO8583Net.Types.ISOFieldPadding">
            <summary>ISO field data paddding method.</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldPadding.LEFT">
            <summary>ISO field data are left padded</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldPadding.RIGHT">
            <summary>ISO field data are right padded</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldPadding.NONE">
            <summary>ISO field data are not padded</summary>
        </member>
        <member name="T:ISO8583Net.Types.ISOFieldContent">
            <summary>Defines the data content type</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.A">
            <summary>Data consist only of alphabetic characters</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.N">
            <summary>Data consist only of numeric characters (digits)</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.AN">
            <summary>Data consist only of alphabetic and numeric characters</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.ANS">
            <summary>Data consist only of alphabetic, numeric and special characters</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.XN">
            <summary>Numeric (amount) values, where the first byte is either 'C' to indicate a positive or Credit value, or 'D' to indicate a negative or Debit value, followed by the numeric value (using n digits)</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.S">
            <summary>Special Characters only</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.NS">
            <summary>Data consist only of numeric and special characters</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.AS">
            <summary>Data consist only of alphabetic and special characters</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.HD">
            <summary>Data consist only of hexadecimal valid characters and digits (A-B-C-D-E-F-0-1-2-3-4-5-6-7-8-9) only</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.Z">
            <summary>Tracks 2 and 3 code set as defined in ISO/IEC 7813 and ISO/IEC 4909 respectively</summary>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmapSubFields.SetFieldValue(System.Int32,System.String)">
            <summary>
            Assigns value to field <paramref name="fieldNumber"/>
            </summary>
            <param name="fieldNumber">The numeric value of the iso field</param>
            <param name="fieldValue">The value (as string) to be assigned to the iso field</param>
            <example>SetFieldValue(2,"4000XXXXXXXX4000")</example>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.lengthFormat">
            <value>The length format indicator</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.lengthCoding">
            <value>The length format indicator</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.lengthPadding">
            <value>The length format indicator</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.content">
            <value>The length format indicator</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.contentCoding">
            <value>The field content format</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.contentPadding">
            <value>The content padding alignment</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.description">
            <value>The field description</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.name">
            <value>The field name</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.lengthLength">
            <value>The units used for length indicator</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.length">
            <value>The max lngth of field data</value>
        </member>
        <member name="T:ISO8583Net.Utilities.ISOUtils">
            <summary>
            The ISO8583Utilities static class implements methods for performing fast conversion between different data types
            </summary>
            <remarks>
            This class can perform the below convertsions:
            </remarks>
        </member>
        <member name="F:ISO8583Net.Utilities.ISOUtils._os_toascii">
            <summary>Static array for fast lookup to convert from ebcdic to ascii</summary>
        </member>
        <member name="F:ISO8583Net.Utilities.ISOUtils._os_toebcdic">
            <summary>Static array for fast lookup to convert from ascii to ebcdic</summary>
        </member>
        <member name="F:ISO8583Net.Utilities.ISOUtils._lookup32">
            <summary>Static array for fast lookup to convert from bytes to hex</summary>
        </member>
        <member name="F:ISO8583Net.Utilities.ISOUtils._HexNibble">
            <summary>Static array for fast HexBibble lookup</summary>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.SubArray``1(``0[],System.Int32,System.Int32)">
            <summary>
            Extents array functionality by allowing to get a new array (sub array) from an array
            </summary>
            <param name="data">The array from where subarray will be created</param>  
            <param name="index">Starting position for the sub array</param>  
            <param name="length">Length of sub arrayt starting from postion index</param>
            <typeparam name="T">An array of any type. Int, Char, Byte etc</typeparam>
            <returns>
            A sub array, portion of the original array in a new array object
            </returns>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.ConcatArray``1(``0[],``0[])">
            <summary>
            Extents array functionality by allowing to concatenate two arrays
            </summary>
            <param name="inData1">The first arrays to be concatanated with the next array</param>  
            <param name="inData2">The arrays to be concatanate to the previous array</param>
            <returns>
            A new array, the resutl of the concatanation of the two arrays passed as parameters
            </returns>
            <typeparam name="T">An array of any type. Int, Char, Byte etc</typeparam>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.BufferConcat(System.Byte[],System.Byte[])">
            <summary>
            Extents array functionality by allowing to concatenate two arrays
            </summary>
            <param name="inData1">The first arrays to be concatanated with the next array</param>  
            <param name="inData2">The arrays to be concatanate to the previous array</param>  
            <returns>
            A new array, the resutl of the concatanation of the two arrays passed as parameters
            </returns>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.CreateLookup32">
            <summary>
            Initializes static array used for Byte to Hex convertions 
            </summary>
            <returns>
            The initialized unsigned int array
            </returns>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Int2Bytes(System.Int32,System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Bytes2Int(System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.int2Bcd(System.Int32,System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.int2ascii(System.Int32,System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.int2ebcdic(System.Int32,System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.ascii2bcd(System.String,System.Byte[],System.Int32@,ISO8583Net.Types.ISOFieldPadding)">
            <summary>
            Adds two integers and returns the result.
            </summary>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.bcd2ascii(System.Byte[],System.Int32@,ISO8583Net.Types.ISOFieldPadding,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.ascii2bytes(System.String,System.Byte[],System.Int32@)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.bytes2ascii(System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.hex2bytes(System.String,System.Byte[],System.Int32@)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.hex2bytes(System.String)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.bytes2hex(System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.bytes2hex(System.Byte[])">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.ascii2ebcdic(System.String,System.Byte[],System.Int32@)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.ebcdic2ascii(System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.IsDigits(System.String)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.IsHexDigits(System.String)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.IsAscii(System.String)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.PrintHex(System.Byte[],System.Int32)">
            <summary>
            Prepares in a string a nice representation of binary data to hex data and ascii (whereever binary characters happen to be printable else is replacing them with a dot
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
            <returns>
            The string with the nicely formated hex representation of binary data
            </returns>
        </member>
    </members>
</doc>
