<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ISO8583Net</name>
    </assembly>
    <members>
        <member name="T:ISO8583Net.Types.ISOFieldParticipation">
            <summary>
            ISO field participation in the an ISO message type
            </summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldParticipation.MAN">
            <summary>ISO field is mandatory, must exist in the message type</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldParticipation.OPT">
            <summary>ISO field is optional, may exist in the message type</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldParticipation.CON">
            <summary>ISO field is conditional, must exists in the message type if some conditions are met</summary>
        </member>
        <member name="T:ISO8583Net.Types.ISOFieldLengthFormat">
            <summary>
            Indicates the length format used for the iso field. ISO Fields can have a fixed length format or a variable length format. When
            a variable length format is used, it means that some length indicator which indicates the length of the iso field preceeds the 
            field data.
            </summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldLengthFormat.FIXED">
            <summary>ISO field has fixed length type. There is no field data length indicator</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldLengthFormat.VAR">
            <summary>ISO field has varialble length type. Field data are preceeded by length indicator</summary>
        </member>
        <member name="T:ISO8583Net.Types.ISOFieldCoding">
            <summary>Defines the encoding of the ISO field value</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.ASCII">
            <summary>ISO field data are encoded in ASCII</summary>       
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.BCD">
            <summary>ISO field data are encoded in BCD</summary>        
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.BCDU">
            <summary>ISO field data are encoded in BCDU (BCD Unpacked)</summary>        
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.EBCDIC">
            <summary>ISO field data are encoded in EBCDIC</summary>        
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.BIN">
            <summary>ISO field data are encoded in BIN (Binary)</summary>        
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldCoding.Z">
            <summary>ISO field data are encoded in Z (Track2 Encoding)</summary>       
        </member>
        <member name="T:ISO8583Net.Types.ISOFieldPadding">
            <summary>ISO field data paddding method.</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldPadding.LEFT">
            <summary>ISO field data are left padded</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldPadding.RIGHT">
            <summary>ISO field data are right padded</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldPadding.NONE">
            <summary>ISO field data are not padded</summary>
        </member>
        <member name="T:ISO8583Net.Types.ISOFieldContent">
            <summary>Defines the data content type</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.A">
            <summary>Data consist only of alphabetic characters</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.N">
            <summary>Data consist only of numeric characters (digits)</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.AN">
            <summary>Data consist only of alphabetic and numeric characters</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.ANS">
            <summary>Data consist only of alphabetic, numeric and special characters</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.XN">
            <summary>Numeric (amount) values, where the first byte is either 'C' to indicate a positive or Credit value, or 'D' to indicate a negative or Debit value, followed by the numeric value (using n digits)</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.S">
            <summary>Special Characters only</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.NS">
            <summary>Data consist only of numeric and special characters</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.AS">
            <summary>Data consist only of alphabetic and special characters</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.HD">
            <summary>Data consist only of hexadecimal valid characters and digits (ABCDEF0123456789) only</summary>
        </member>
        <member name="F:ISO8583Net.Types.ISOFieldContent.Z">
            <summary>Tracks 2 and 3 code set as defined in ISO/IEC 7813 and ISO/IEC 4909 respectively</summary>
        </member>
        <member name="T:ISO8583Net.Field.ISOComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Field.ISOComponent.#ctor(Microsoft.Extensions.Logging.ILogger,System.Int32)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="number"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOComponent.#ctor(Microsoft.Extensions.Logging.ILogger,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="number"></param>
            <param name="value"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOComponent.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOComponent.Set(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOComponent.GetFieldValue(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOComponent.GetFieldValue(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="subField"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOComponent.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="T:ISO8583Net.Field.ISOField">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Field.ISOField.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOPackager,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="packager"></param>
            <param name="number"></param>
            <param name="value"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOField.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOPackager,System.Int32)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="packager"></param>
            <param name="number"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOField.Set(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOField.GetFieldValue(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOField.GetFieldValue(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="subField"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOField.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Field.ISOField.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ISO8583Net.Field.ISOFieldBerTlv">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBerTlv.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOFieldPackager,System.Int32)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="packager"></param>
            <param name="fieldNumber"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBerTlv.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOFieldPackager,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="packager"></param>
            <param name="fieldNumber"></param>
            <param name="value"></param>
        </member>
        <member name="T:ISO8583Net.Field.ISOFieldBitmap">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISO8583Net.Field.ISOFieldBitmap.value">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISO8583Net.Field.ISOFieldBitmap.secondaryBitmapIsSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISO8583Net.Field.ISOFieldBitmap.thirdBitmapIsSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOPackager,System.Int32)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="packager"></param>
            <param name="number"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.Set(System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.GetLengthInBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.GetLengthInBits">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.SetBit(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.ToggleBit(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.BitIsSet(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.ToHexString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.ToDashedHexString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.ToBinaryString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.ToHumanReadable(System.String)">
            <summary>
            
            </summary>
            <param name="padString"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.GetByteArray">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmap.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="T:ISO8583Net.Field.ISOFieldBitmapSubFields">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmapSubFields.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOFieldBitmapSubFieldsPackager,System.Int32)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="packager"></param>
            <param name="fieldNumber"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmapSubFields.Set(System.Int32,System.String)">
            <summary>
            Assigns value to field <paramref name="fieldNumber"/>
            </summary>
            <param name="fieldNumber">The numeric value of the iso field</param>
            <param name="fieldValue">The value (as string) to be assigned to the iso field</param>
            <example>SetFieldValue(2,"4000XXXXXXXX4000")</example>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmapSubFields.GetField(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmapSubFields.GetFields">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISO8583Net.Field.ISOFieldBitmapSubFields.value">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmapSubFields.GetFieldValue(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmapSubFields.GetFieldValue(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="subField"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmapSubFields.SetFieldPackager(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmapSubFields.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOFieldBitmapSubFields.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="T:ISO8583Net.Field.ISOMessageFields">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Field.ISOMessageFields.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOMessageFieldsPackager,System.Int32)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="packager"></param>
            <param name="fieldNumber"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOMessageFields.Set(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOMessageFields.SetValue(System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="subFieldNumber"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="M:ISO8583Net.Field.ISOMessageFields.SetFieldPackager(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOMessageFields.GetField(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOMessageFields.GetFields">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOMessageFields.GetFieldValue(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOMessageFields.GetFieldValue(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="subField"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOMessageFields.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Field.ISOMessageFields.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="T:ISO8583Net.Header.ISOHeader">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeader.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeader.Pack(System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeader.UnPack(System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeader.Length">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeader.SetValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeader.SetMessageLength(System.Int32)">
            <summary>
            
            </summary>
            <param name="length"></param>
        </member>
        <member name="T:ISO8583Net.Header.ISOHeaderVisa">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeaderVisa.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeaderVisa.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOHeaderPackager)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="isoHeaderPackager"></param>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeaderVisa.Length">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeaderVisa.SetMessageLength(System.Int32)">
            <summary>
            
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeaderVisa.SetValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeaderVisa.Pack(System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="packedData"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Header.ISOHeaderVisa.UnPack(System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="T:ISO8583Net.Message.ISOMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOMessagePackager,ISO8583Net.Packager.ISOHeaderPackager)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="messagePackager"></param>
            <param name="isoHeaderPackager"></param>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOMessagePackager)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="isoMessagePackager"></param>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.Set(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.Set(System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="subFieldNumber"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.GetFieldValue(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.GetField(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.GetFieldValue(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="subField"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.Pack">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.UnPack(System.Byte[])">
            <summary>
            
            </summary>
            <param name="packedBytes"></param>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.ToCommonISO">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Message.ISOMessage.FromCommonISO(ISO8583Net.Message.ISOMessage)">
            <summary>
            
            </summary>
            <param name="isoMessage"></param>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldBitmapSubFieldsPackager.totalFields">
            <summary>
            Total number of subfields  
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldBitmapSubFieldsPackager.#ctor(Microsoft.Extensions.Logging.ILogger,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="fieldNumber"></param>
            <param name="totalFields"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldBitmapSubFieldsPackager.Add(ISO8583Net.Packager.ISOPackager,System.Int32)">
            <summary>
            Adds packager of subfield to the array of sub field packagers 
            </summary>
            <param name="fieldPackager"></param>
            <param name="number"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldBitmapSubFieldsPackager.Pack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            Packs all subfields of field 
            </summary>
            <param name="isoMessageFields"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
            <remarks>
            The way the length is handled is completely wrong, needs to be coded correctly
            </remarks>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldBitmapSubFieldsPackager.UnPack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoField"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldBitmapSubFieldsPackager.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldBitmapSubFieldsPackager.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldBitmapSubFieldsPackager.GetFieldPackager(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="T:ISO8583Net.Packager.ISOFieldDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.lengthFormat">
            <value>The length format indicator</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.lengthCoding">
            <value>The length format indicator</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.lengthPadding">
            <value>The length format indicator</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.content">
            <value>The length format indicator</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.contentCoding">
            <value>The field content format</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.contentPadding">
            <value>The content padding alignment</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.description">
            <value>The field description</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.name">
            <value>The field name</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.lengthLength">
            <value>The units used for length indicator</value>
        </member>
        <member name="P:ISO8583Net.Packager.ISOFieldDefinition.length">
            <value>The max lngth of field data</value>
        </member>
        <member name="T:ISO8583Net.Packager.ISOFieldPackager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldPackager.SetFieldDefinition(ISO8583Net.Packager.ISOFieldDefinition)">
            <summary>
            
            </summary>
            <param name="isoFieldDefinition"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldPackager.SetFieldNumber(System.Int32)">
            <summary>
            
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldPackager.GetFieldLength">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldPackager.Validate(ISO8583Net.Field.ISOComponent)">
            <summary>
            
            </summary>
            <param name="isoField"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldPackager.Pack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoField"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldPackager.UnPack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoField"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldPackager.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOFieldPackager.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="T:ISO8583Net.Packager.ISOHeaderPackager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOHeaderPackager.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="F:ISO8583Net.Packager.ISOHeaderPackager.m_storeageClass">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOHeaderPackager.Pack(ISO8583Net.Header.ISOHeader,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoHeader"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOHeaderPackager.UnPack(ISO8583Net.Header.ISOHeader,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoHeader"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOHeaderPackager.Set(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOHeaderPackager.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="T:ISO8583Net.Packager.ISOHeaderVisaPackager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOHeaderVisaPackager.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOHeaderVisaPackager.Pack(ISO8583Net.Header.ISOHeader,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoHeader"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOHeaderVisaPackager.Set(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOHeaderVisaPackager.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOHeaderVisaPackager.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOHeaderVisaPackager.UnPack(ISO8583Net.Header.ISOHeader,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoHeader"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="T:ISO8583Net.Packager.ISOMessageFieldsPackager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageFieldsPackager.#ctor(Microsoft.Extensions.Logging.ILogger,System.Int32,System.Int32,ISO8583Net.Packager.ISOFieldDefinition)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="fieldNumber"></param>
            <param name="totalFields"></param>
            <param name="isoFieldDefinition"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageFieldsPackager.#ctor(Microsoft.Extensions.Logging.ILogger,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="fieldNumber"></param>
            <param name="totalFields"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageFieldsPackager.SetMessageTypesPackager(ISO8583Net.Packager.ISOMessageTypesPackager)">
            <summary>
            
            </summary>
            <param name="isoMessageTypesPackager"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageFieldsPackager.Add(ISO8583Net.Packager.ISOPackager,System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldPackager"></param>
            <param name="number"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageFieldsPackager.EnableFieldParticipationValidations(System.Boolean)">
            <summary>
            
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageFieldsPackager.Pack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoMessageFields"></param>
            <param name="packedBytes"></param>
            <param name="i"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageFieldsPackager.UnPack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoField"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageFieldsPackager.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageFieldsPackager.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageFieldsPackager.GetFieldPackager(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageFieldsPackager.GetTotalFields">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ISO8583Net.Packager.ISOMessagePackager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessagePackager.GetTotalFields">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessagePackager.#ctor(Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessagePackager.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessagePackager.Pack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoMessage"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessagePackager.UnPack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoField"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessagePackager.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessagePackager.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessagePackager.GetFieldPackager(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessagePackager.GetFieldPackager(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldNumber"></param>
            <param name="subFieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessagePackager.GetISOMessageFieldsPackager">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.#ctor(Microsoft.Extensions.Logging.ILogger,System.Int32)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="totalFields"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.Pack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoField"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.UnPack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoField"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.Add(System.String,ISO8583Net.Packager.ISOMsgTypePackager)">
            <summary>
            
            </summary>
            <param name="msgType"></param>
            <param name="msgTypePackager"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.ValidateBitmap(ISO8583Net.Field.ISOFieldBitmap,System.String)">
            <summary>
            
            </summary>
            <param name="bitMapField"></param>
            <param name="msgType"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.GetTotalFields">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.GetMandatoryByteArray(System.String)">
            <summary>
            
            </summary>
            <param name="isoMsgType"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.GetOptionalByteArray(System.String)">
            <summary>
            
            </summary>
            <param name="isoMsgType"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.GetConditionalByteArray(System.String)">
            <summary>
            
            </summary>
            <param name="isoMsgType"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.GetMandatoryBitmap(System.String)">
            <summary>
            
            </summary>
            <param name="isoMsgType"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.GetOptionalBitmap(System.String)">
            <summary>
            
            </summary>
            <param name="isoMsgType"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMessageTypesPackager.GetConditionalBitmap(System.String)">
            <summary>
            
            </summary>
            <param name="isoMsgType"></param>
            <returns></returns>
        </member>
        <member name="T:ISO8583Net.Packager.ISOMsgTypePackager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMsgTypePackager.#ctor(Microsoft.Extensions.Logging.ILogger,System.Int32)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="totalFields"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMsgTypePackager.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMsgTypePackager.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMsgTypePackager.ValidateBitmap(ISO8583Net.Field.ISOFieldBitmap)">
            <summary>
            
            </summary>
            <param name="isoMsgBitmap"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMsgTypePackager.GetMandatoryByteArray">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMsgTypePackager.GetOptionalByteArray">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMsgTypePackager.GetConditionalByteArray">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMsgTypePackager.GetMandatoryBitmap">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMsgTypePackager.GetOptionalBitmap">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOMsgTypePackager.GetConditionalBitmap">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ISO8583Net.Packager.ISOPackager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOFieldDefinition)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="isoFieldDefinition"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.SetISOInterpreter(ISO8583Net.Interpreter.ISOInterpreter)">
            <summary>
            
            </summary>
            <param name="isoInterpreter"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.SetStorageClass(System.Type)">
            <summary>
            
            </summary>
            <param name="storageClass"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.SetComposite(System.Boolean)">
            <summary>
            
            </summary>
            <param name="compositeIndicator"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.IsComposite">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.GetFieldNumber">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.GetISOFieldDefinition">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.SetISOFieldDefinition(ISO8583Net.Packager.ISOFieldDefinition)">
            <summary>
            
            </summary>
            <param name="isoFieldDefinition"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.InterpretField(System.String)">
            <summary>
            
            </summary>
            <param name="fieldValue"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.Pack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoField"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.UnPack(ISO8583Net.Field.ISOComponent,System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="isoField"></param>
            <param name="packedBytes"></param>
            <param name="index"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackager.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackagerLoader.#ctor(Microsoft.Extensions.Logging.ILogger,System.String,ISO8583Net.Packager.ISOMessageFieldsPackager@)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="fileName"></param>
            <param name="msgFieldPackager"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackagerLoader.#ctor(Microsoft.Extensions.Logging.ILogger,ISO8583Net.Packager.ISOMessageFieldsPackager@)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="msgFieldPackager"></param>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackagerLoader.LoadMessageTypes(System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackagerLoader.LoadISOFieldPackager(System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackagerLoader.LoadISOMessageFieldsPackager(System.Xml.XmlReader,System.Int32)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackagerLoader.LoadISOMessageSubFieldsPackager(System.Xml.XmlReader,System.Int32)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="fieldNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ISO8583Net.Packager.ISOPackagerLoader.LoadISOIndexedValueInterpreter(System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:ISO8583Net.Utilities.ISOUtils">
            <summary>
            The ISO8583Utilities static class implements methods for performing fast conversion between different data types
            </summary>
            <remarks>
            This class can perform the below convertsions:
            </remarks>
        </member>
        <member name="F:ISO8583Net.Utilities.ISOUtils._os_toascii">
            <summary>Static array for fast lookup to convert from ebcdic to ascii</summary>
        </member>
        <member name="F:ISO8583Net.Utilities.ISOUtils._os_toebcdic">
            <summary>Static array for fast lookup to convert from ascii to ebcdic</summary>
        </member>
        <member name="F:ISO8583Net.Utilities.ISOUtils._lookup32">
            <summary>Static array for fast lookup to convert from bytes to hex</summary>
        </member>
        <member name="F:ISO8583Net.Utilities.ISOUtils._HexNibble">
            <summary>Static array for fast HexBibble lookup</summary>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.SubArray``1(``0[],System.Int32,System.Int32)">
            <summary>
            Extents array functionality by allowing to get a new array (sub array) from an array
            </summary>
            <param name="data">The array from where subarray will be created</param>  
            <param name="index">Starting position for the sub array</param>  
            <param name="length">Length of sub arrayt starting from postion index</param>
            <typeparam name="T">An array of any type. Int, Char, Byte etc</typeparam>
            <returns>
            A sub array, portion of the original array in a new array object
            </returns>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.ConcatArray``1(``0[],``0[])">
            <summary>
            Extents array functionality by allowing to concatenate two arrays
            </summary>
            <param name="inData1">The first arrays to be concatanated with the next array</param>  
            <param name="inData2">The arrays to be concatanate to the previous array</param>
            <returns>
            A new array, the resutl of the concatanation of the two arrays passed as parameters
            </returns>
            <typeparam name="T">An array of any type. Int, Char, Byte etc</typeparam>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.BufferConcat(System.Byte[],System.Byte[])">
            <summary>
            Extents array functionality by allowing to concatenate two arrays
            </summary>
            <param name="inData1">The first arrays to be concatanated with the next array</param>  
            <param name="inData2">The arrays to be concatanate to the previous array</param>  
            <returns>
            A new array, the resutl of the concatanation of the two arrays passed as parameters
            </returns>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.CreateLookup32">
            <summary>
            Initializes static array used for Byte to Hex convertions 
            </summary>
            <returns>
            The initialized unsigned int array
            </returns>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Int2Bytes(System.Int32,System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Bytes2Int(System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Int2Bcd(System.Int32,System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Int2Ascii(System.Int32,System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Int2Ebcdic(System.Int32,System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Ascii2Bcd(System.String,System.Byte[],System.Int32@,ISO8583Net.Types.ISOFieldPadding)">
            <summary>
            Adds two integers and returns the result.
            </summary>
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Bcd2Ascii(System.Byte[],System.Int32@,ISO8583Net.Types.ISOFieldPadding,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Ascii2Bytes(System.String,System.Byte[],System.Int32@)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Bytes2Ascii(System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Hex2Bytes(System.String,System.Byte[],System.Int32@)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Hex2Bytes(System.String)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Bytes2Hex(System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Bytes2Hex(System.Byte[])">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Ascii2Ebcdic(System.String,System.Byte[],System.Int32@)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.Ebcdic2Ascii(System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.IsDigits(System.String)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.IsHexDigits(System.String)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.IsAscii(System.String)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
        </member>
        <member name="M:ISO8583Net.Utilities.ISOUtils.PrintHex(System.Byte[],System.Int32)">
            <summary>
            Prepares in a string a nice representation of binary data to hex data and ascii (whereever binary characters happen to be printable else is replacing them with a dot
            </summary>
            <param name="value">The integer to be convert to bytes</param>  
            <returns>
            The string with the nicely formated hex representation of binary data
            </returns>
        </member>
    </members>
</doc>
